-- TABLA PADRE PERSONA
-- HEREDA A SOCIO, CLIENTE, ENTRENADOR
CREATE TABLE PERSONA(
	ID_PERSONA NUMBER PRIMARY KEY,
	NOMBRE VARCHAR (50) NOT NULL,
	EMAIL VARCHAR(25),
	EDAD DATE,
	SEXO VARCHAR(9) CHECK(SEXO IN ('MASCULINO', 'FEMENINO')),
	TELEFONO NUMBER(10)
);

CREATE TABLE SOCIO(
	ID_SOCIO NUMBER PRIMARY KEY,
	NOMBRE VARCHAR(50) NOT NULL,
	EMAIL VARCHAR(25),
	EDAD DATE,
	SEXO VARCHAR(9) CHECK(SEXO IN ('MASCULINO', 'FEMENINO')),
	TELEFONO NUMBER(10),
	ID_PERSONA NUMBER,
	FEC_NAC DATE,
	PERSONA_CONTACTO VARCHAR(25),
	CONSTRAINT FK_IDPERSONA_SOCIO FOREIGN KEY (ID_PERSONA) REFERENCES PERSONA(ID_PERSONA)
);

CREATE TABLE CLIENTE(
	ID_CLIENTE NUMBER PRIMARY KEY,
	NOMBRE VARCHAR(50) NOT NULL,
	EMAIL VARCHAR(25),
	EDAD DATE,
	SEXO VARCHAR(9) CHECK(SEXO IN ('MASCULINO', 'FEMENINO')),
	TELEFONO NUMBER(10),
	ID_PERSONA NUMBER,
	CONSTRAINT FK_IDPERSONA_CLIENTE FOREIGN KEY (ID_PERSONA) REFERENCES PERSONA(ID_PERSONA)
);

CREATE TABLE ENTRENADOR(
	ID_EMPLEADO NUMBER PRIMARY KEY,
	NOMBRE VARCHAR(50) NOT NULL,
	EMAIL VARCHAR(25),
	EDAD DATE,
	SEXO VARCHAR(9) CHECK(SEXO IN ('MASCULINO', 'FEMENINO')),
	TELEFONO NUMBER(10),
	ID_PERSONA NUMBER,
	DIRECCION VARCHAR(50),
	CONSTRAINT FK_IDPERSONA_ENTRENADOR FOREIGN KEY (ID_PERSONA) REFERENCES PERSONA(ID_PERSONA)
);

CREATE TABLE MEMBRESIA(
	ID_MEMBRESIA NUMBER PRIMARY KEY,
	COSTO DECIMAL(5,2)
);

CREATE TABLE TIPO_MEMBRESIA(
	ID_MEMBRESIA NUMBER PRIMARY KEY,
	AREAS_ENTRENAMIENTO VARCHAR(80),
	REGADERAS VARCHAR(25),
	CONSTRAINT FK_IDMEMBRESIA_TIPOMEMBRESIA FOREIGN KEY (ID_MEMBRESIA) REFERENCES MEMBRESIA(ID_MEMBRESIA)
);

CREATE TABLE MEMBRESIA_BASICA(
	ID_MEMBRESIA NUMBER PRIMARY KEY,
	AREAS_ENTRENAMIENTO VARCHAR(80),
	REGADERAS VARCHAR(25),
	CONSTRAINT FK_IDMEMBRESIA_BASICA FOREIGN KEY (ID_MEMBRESIA) REFERENCES MEMBRESIA(ID_MEMBRESIA)
);

CREATE TABLE MEMBRESIA_PLUS(
	ID_MEMBRESIA PRIMARY KEY,
	AREAS_ENTRENAMIENTO VARCHAR(80),
	REGADERAS VARCHAR(25),
	CASILLERO VARCHAR(10),
	ENTRENADOR VARCHAR(50),
	CONSTRAINT FK_IDMEMBRESIA_PLUS FOREIGN KEY (ID_MEMBRESIA) REFERENCES MEMBRESIA(ID_MEMBRESIA)
);

CREATE TABLE MEMBRESIA_PREMIUM(
	ID_MEMBRESIA PRIMARY KEY,
	AREAS_ENTRENAMIENTO VARCHAR(80),
	REGADERAS VARCHAR(25),
	CASILLERO VARCHAR(10),
	ENTRENADOR VARCHAR(50),
	SAUNA VARCHAR(25),
	ESPECIALISTA_NUTRICION VARCHAR(25),
	PUNTOS NUMBER,
	CONSTRAINT FK_IDMEMBRESIA_PREMIUM FOREIGN KEY (ID_MEMBRESIA) REFERENCES MEMBRESIA(ID_MEMBRESIA)
);

CREATE TABLE SISTEMA_PUNTOS(
	ID_MEMBRESIA NUMBER PRIMARY KEY,
	PUNTOS NUMBER,
	CONSTRAINT FK_IDMEMBRESIA_SISTEMA_PUNTOS FOREIGN KEY (ID_MEMBRESIA) REFERENCES MEMBRESIA_PREMIUM(ID_MEMBRESIA)
);

CREATE TABLE CLASE(
	NOMBRE_CLASE VARCHAR(25) PRIMARY KEY NOT NULL,
	ENTRENADOR VARCHAR(40),
	COSTO DECIMAL(5,2),
	DIAS_IMPARTIDOS VARCHAR(50),
	HORA_INICIO TIMESTAMP,
	HORA_FIN TIMESTAMP
);

CREATE TABLE PRODUCTO(
	NOMBRE_PRODUCTO VARCHAR(25) PRIMARY KEY,
	PRESENTACION VARCHAR(25),
	DESCRIPCION VARCHAR(50),
	EXISTENCIAS NUMBER,
	MARCA VARCHAR(25)
);

-- RELACION: SOCIO - TENER - MEMBRESIA
CREATE TABLE TENER(
	ID_MEMBRESIA NUMBER,
	ID_SOCIO NUMBER,
	PRIMARY KEY(ID_MEMBRESIA, ID_SOCIO),
	CONSTRAINT FK_MEMBRESIA_TENER FOREIGN KEY (ID_MEMBRESIA) REFERENCES MEMBRESIA(ID_MEMBRESIA),
	CONSTRAINT FK_SOCIO_TENER FOREIGN KEY (ID_SOCIO) REFERENCES SOCIO(ID_SOCIO)
);

-- RELACION: SOCIO - TOMAR - CLASES
CREATE TABLE TOMAR_CLASE_SOCIO(
	NOMBRE_CLASE VARCHAR(25) NOT NULL,
	ENTRENADOR VARCHAR(40),
	ID_SOCIO NUMBER,
	PRIMARY KEY(NOMBRE_CLASE, ENTRENADOR, ID_SOCIO),
	CONSTRAINT FK_NOMCLASE_TOMARCLASESOCIO FOREIGN KEY (NOMBRE_CLASE) REFERENCES CLASE(NOMBRE_CLASE),
	CONSTRAINT FK_IDSOCIO_TOMAR_CLASE_SOCIO FOREIGN KEY (ID_SOCIO) REFERENCES SOCIO(ID_SOCIO)
);
-- RELACION: CLIENTE - TOMAR - CLASES
CREATE TABLE TOMAR_CLASE_CLIENTE(
	NOMBRE_CLASE VARCHAR(25) NOT NULL,
	ENTRENADOR VARCHAR(40),
	ID_CLIENTE NUMBER,
	PRIMARY KEY(NOMBRE_CLASE, ENTRENADOR, ID_CLIENTE),
	CONSTRAINT FK_NOMCLASE_TOMARCLASECLIENTE FOREIGN KEY (NOMBRE_CLASE) REFERENCES CLASE(NOMBRE_CLASE),
	CONSTRAINT FK_IDCLIENTE_TOMARCLASECLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE)
);

-- RELACION: SOCIO - COMPRAR - PRODUCTO
CREATE TABLE COMPRAR_SOCIO(
	ID_SOCIO NUMBER,
	NOMBRE_PRODUCTO VARCHAR(25),
	PRESENTACION VARCHAR(25),
	PRIMARY KEY(ID_SOCIO, NOMBRE_PRODUCTO, PRESENTACION),
	CONSTRAINT FK_SOCIO_COMPRAR_SOCIO FOREIGN KEY (ID_SOCIO) REFERENCES SOCIO(ID_SOCIO),
	CONSTRAINT FK_NOMPRODUCTO_COMPRARSOCIO FOREIGN KEY (NOMBRE_PRODUCTO) REFERENCES PRODUCTO(NOMBRE_PRODUCTO)
);

-- RELACION: CLIENTE - COMPRAR - PRODUCTO
CREATE TABLE COMPRAR_CLIENTE(
	ID_CLIENTE NUMBER,
	NOMBRE_PRODUCTO VARCHAR(25),
	PRESENTACION VARCHAR(25),
	PRIMARY KEY(ID_CLIENTE, NOMBRE_PRODUCTO, PRESENTACION),
	CONSTRAINT FK_CLIENTE_COMPRAR_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
	CONSTRAINT FK_NOMPRODUCTO_COMPRARCLIENTE FOREIGN KEY (NOMBRE_PRODUCTO) REFERENCES PRODUCTO(NOMBRE_PRODUCTO)
);

-- RELACION: ENTRENADOR - IMPARTE - CLASE
CREATE TABLE IMPARTIR_CLASE(
	NOMBRE_CLASE VARCHAR(25) NOT NULL,
	ENTRENADOR VARCHAR(40),
	ID_EMPLEADO NUMBER,
	PRIMARY KEY(NOMBRE_CLASE, ENTRENADOR, ID_EMPLEADO),
	CONSTRAINT FK_NOMBRECLASE_IMPARTIR_CLASE FOREIGN KEY (NOMBRE_CLASE) REFERENCES CLASE(NOMBRE_CLASE),
	CONSTRAINT FK_IDEMPLEADO_IMPARTIR_CLASE FOREIGN KEY (ID_EMPLEADO) REFERENCES ENTRENADOR(ID_EMPLEADO)
);

-- RELACION: CLASE - OBTENER_PUNTOS - SISTEMA_PUNTOS
CREATE TABLE OBTENER_PUNTOS(
	NOMBRE_CLASE VARCHAR(25),
	ID_MEMBRESIA NUMBER,
	ES_ZUMBA NUMBER(1),
	ES_TWERTK NUMBER(1),
	ES_YOGA NUMBER(1),
	ES_BOXEO NUMBER(1),
	ES_DANZA_ARABE NUMBER(1),
	PRIMARY KEY(NOMBRE_CLASE, ID_MEMBRESIA),
	CONSTRAINT FK_NOMBRECLASE_OBTENER_PUNTOS FOREIGN KEY (NOMBRE_CLASE) REFERENCES CLASE(NOMBRE_CLASE),
	CONSTRAINT FK_IDMEMBRESIA_OBTENER_PUNTOS FOREIGN KEY (ID_MEMBRESIA) REFERENCES MEMBRESIA(ID_MEMBRESIA)
);